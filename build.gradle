buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()

    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "se.transmode.gradle:gradle-docker:1.2"
        
    }
}

group 'yelplikeservice'
version '1.0'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'
apply plugin: 'jacoco'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {

    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-devtools")
    // JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
    compile ("org.springframework.boot:spring-boot-starter-data-jpa:2.1.0.RELEASE")

    // To enable hot reloading on dev - commented out as appengine tasks doesnt like this
    //compile("org.springframework.boot:spring-boot-devtools")

    // Use MySQL Connector-J
    //compile 'mysql:mysql-connector-java:8.0.12'
    compile 'org.projectlombok:lombok:1.18.6'
    //Lombok support for jdk 11
    compileOnly 'org.projectlombok:lombok:1.18.6'
    annotationProcessor 'org.projectlombok:lombok:1.18.6'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
    compile 'org.hashids:hashids:1.0.3'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
    compile group: 'com.h2database', name: 'h2', version: '1.4.197'

    // Metrics related dependencies
    compile("org.springframework.boot:spring-boot-starter-actuator:2.1.0.RELEASE")
    compile group: 'io.prometheus', name: 'simpleclient_hotspot', version: '0.5.0'
    // https://mvnrepository.com/artifact/io.prometheus/simpleclient_spring_boot
    compile group: 'io.prometheus', name: 'simpleclient_spring_boot', version: '0.5.0'
    compile group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.0.6'

    // Google guava
    compile group: 'com.google.guava', name: 'guava', version: '27.1-jre'

    testCompile group: 'junit', name: 'junit', version: '4.12'

    testCompile('org.springframework.boot:spring-boot-starter-test')

}

bootRun {
    // support passing -Dsystem.property=value to bootRun task
    systemProperties = System.properties
}

task buildDocker(type: Docker, dependsOn: build) {
    baseImage = 'gcr.io/distroless/java'
    tag = "${project.group}"
    applicationName = jar.baseName
    //dockerfile = file('Dockerfile')

    //doFirst {
    //    copy {
    //        from jar
    //        into "${stageDir}/target"
    //    }
    //}

    addFile {
        from jar
        rename {'app.jar'}
    }

    entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])

    task showMeCache << {
        configurations.compile.each { println it }
    }
}

jacoco {
    toolVersion = "0.8.3"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

test {
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
    }
}


jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/jacoco.xml")
        csv.enabled false
        html.enabled false
    }
}